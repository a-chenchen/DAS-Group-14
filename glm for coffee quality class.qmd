---
title: ""
number-sections: true
format: 
  html:
    embed-resources: true
    code-tools: true
  pdf: default
editor_options: 
  chunk_output_type: console
execute:
  echo: true
  eval: true
  warning: false
  message: false
---

```{r}
library(tidyverse)
library(moderndive)
library(gapminder)
library(sjPlot)
library(stats)
library(jtools)
library(dplyr)
library(knitr)
library(janitor)
library(MASS)
library(caret)
```

# Data wrangling and subsetting

```{r}
#data wrangling and subseting
data = read.csv('dataset14.csv')
data <- na.omit(data)
mapping = c('Poor' = 0, 'Good' = 1)
data$Qualityclass = mapping[data$Qualityclass]
data$harvested = as.factor(data$harvested)
```

```{r}
#remove Cote d?Ivoire
data <- data %>% 
  filter(country_of_origin != "Cote d?Ivoire")
```

Here we map countriy_of_origin to corresponding continent

```{r}
unique(data$country_of_origin)
```

```{r}
continent_mapping <- c("China" = "Asia", "Mexico" = "North America", "Brazil" = "South America",
                       "Guatemala" = "North America", "Taiwan" = "Asia", "Uganda" = "Africa",
                       "Vietnam" = "Asia", "Thailand" = "Asia", "Colombia" = "South America",
                       "Kenya" = "Africa", "Costa Rica" = "North America", "Haiti" = "North America",
                       "Honduras" = "North America", "Philippines" = "Asia", "El Salvador" = "North America",
                       "Indonesia" = "Asia", "Ethiopia" = "Africa",
                       "Tanzania, United Republic Of" = "Africa", "Nicaragua" = "North America", "Malawi" = "Africa",
                       "United States" = "North America", "Peru" = "South America", "Rwanda" = "Africa",
                       "India" = "Asia", "Myanmar" = "Asia", "Papua New Guinea" = "Oceania", "Laos" = "Asia",
                       "Panama" = "North America", "Burundi" = "Africa",
                       "United States (Puerto Rico)" = "North America", "United States (Hawaii)" = "North America",
                       "Cote d'Ivoire" = "Africa", "Zambia" = "Africa", "Ecuador" = "South America")

# map countries to its continent
data$continent <- continent_mapping[data$country_of_origin]
table(data$continent)

```
delete sole observation in Oceania.

```{r}
data = data %>% filter(continent != 'Oceania')
```

# fitting GLM models

## Not removing variables

Here we have continent as our new categorical explanatory variable to fit a full logistic regression model:

```{r}
#Here we have continent as our new categorical explanatory variable
full_model = glm(Qualityclass ~ . - country_of_origin, family = binomial(link = 'logit'), data = data)
```

```{r}
summary(full_model)
```

It is shown that the 'harvested' and 'altitude_mean_meters' variables are insignificant. \## Using stepAIC to measure goodness of fit

```{r}
#direction = 'backward'
stepAIC(full_model)
```

```{r}
#direction = 'both'
stepAIC(full_model, direction = 'both')
```

Both indicated that to obtain a better glm model, 'harvested' and 'altitude_mean_meters' variable should be removed.\
\## Therefore we obtained a better glm model

```{r}
model1 = glm(formula = Qualityclass ~ aroma + flavor + acidity +
               category_two_defects + continent,
             family = binomial(link = "logit"), data = data)
summary(model1)
```
However, in the model with lowest AIC 523.88, variable category_two_defects is not so significant.

```{r}
model2 = glm(formula = Qualityclass ~ aroma + flavor + acidity +  
      continent, family = binomial(link = "logit"), data = data)
summary(model2)
```
The model dropping category_two_defects has AIC 524.97, which is slightly higher than 523.88. But all the variables are significant.

So we want to compare this two models by predictive power.

# predictive power

To compare predictive power of these two models, mean accuracy rate of 10-fold cross validation is used there.

```{r}
set.seed(14)
folds <- createFolds(y=data$Qualityclass,k=10)
```

```{r}
total.n = 0
right1.n = 0
right2.n = 0
for(i in 1:10){
  fold.val = data[folds[[i]],]
  fold.train = data[-folds[[i]],]
  model1.val = glm(Qualityclass ~ aroma + flavor + acidity +
               category_two_defects + continent,
             family = binomial(link = "logit"), data = fold.train)
  predict1.val = ifelse(predict(model1.val, type='response',newdata=fold.val)>0.5, 1, 0)
  model2.val = glm(Qualityclass ~ aroma + flavor + acidity + continent,
             family = binomial(link = "logit"), data = fold.train)
  predict2.val = ifelse(predict(model2.val, type='response',newdata=fold.val)>0.5, 1, 0)
  total.n = total.n + nrow(fold.val)
  right1.n = right1.n + sum(predict1.val == fold.val$Qualityclass)
  right2.n = right2.n + sum(predict2.val == fold.val$Qualityclass)
}
print('mean accuracy rate foe model including category_two_defects: ')
print(right1.n/total.n)
print('mean accuracy rate foe model dropping category_two_defects: ')
print(right2.n/total.n)
```
Including variable category_two_defects cause a slightly higher accuracy rate.

# Conclusion

full_model: AIC=538.89, Residual deviance=502.89\
By removing 'harvested' and 'altitude_mean_meters' variable which were insignificant: AIC=525.9, Residual Deviance=507.9\

Finally, we choose the binomial generalized linear model with aroma, flavor, acidity, category_two_defects and continent to fit and predict quality class of coffee.


# visualize

obtain estimated probabilities for each variable:

1、aroma
```{r}
data$Qualityclass = as.factor(data$Qualityclass)
modcoefs <- round(coef(model1),2)
mod.coef.logodds <- model1 %>%
                      summary() %>%
                      coef()
aroma.logodds.lower <- mod.coef.logodds["aroma", "Estimate"] - 
                      1.96 * mod.coef.logodds["aroma", "Std. Error"]
aroma.logodds.upper <- mod.coef.logodds["aroma", "Estimate"] + 
                      1.96 * mod.coef.logodds["aroma", "Std. Error"]
plot_model(model1, terms = "aroma",show.values = TRUE, transform = NULL,
           title = "Log-Odds (qualityclass is good)", show.p = FALSE)
```

```{r}
plogis(mod.coef.logodds["(Intercept)", "Estimate"] + mod.coef.logodds["aroma", "Estimate"] * data$aroma)
data <- data %>%
                  mutate(probs.good = fitted(model1))
```

```{r}
#method 1
ggplot(data = data, aes(x = aroma, y = probs.good)) +
  geom_smooth(method="glm", 
              method.args = list(family="binomial"), 
              se = FALSE) +
  labs(x = "Aroma", y = "Probability of qualityclass being good")
```

```{r}
#method 2
plot_model(model1, type = "pred", terms = "aroma[all]")
```

The predicted probability of Qualityclass increases sharply as the aroma score increases. This suggests a strong positive association between the quality of coffee and its aroma.


2、flavor
```{r}
flavor.logodds.lower <- mod.coef.logodds["flavor", "Estimate"] - 
                      1.96 * mod.coef.logodds["flavor", "Std. Error"]
flavor.logodds.upper <- mod.coef.logodds["flavor", "Estimate"] + 
                      1.96 * mod.coef.logodds["flavor", "Std. Error"]
plot_model(model1, terms = "flavor",show.values = TRUE, transform = NULL,
           title = "Log-Odds (qualityclass is good)", show.p = FALSE)
```

```{r}
plogis(mod.coef.logodds["(Intercept)", "Estimate"] + mod.coef.logodds["flavor", "Estimate"] * data$flavor)
```

```{r}
#method 1
ggplot(data = data, aes(x = flavor, y = probs.good)) +
  geom_smooth(method="glm", 
              method.args = list(family="binomial"), 
              se = FALSE) +
  labs(x = "Flavor", y = "Probability of qualityclass being good")
```

```{r}
#method 2
plot_model(model1, type = "pred", terms = "flavor[all]")
```

Similar to aroma, the probability of a higher Qualityclass increases sharply with the flavor score. Flavor appears to be a significant predictor of coffee quality.

3、acidity
```{r}
acidity.logodds.lower <- mod.coef.logodds["acidity", "Estimate"] - 
                      1.96 * mod.coef.logodds["acidity", "Std. Error"]
acidity.logodds.upper <- mod.coef.logodds["acidity", "Estimate"] + 
                      1.96 * mod.coef.logodds["acidity", "Std. Error"]
plot_model(model1, terms = "acidity",show.values = TRUE, transform = NULL,
           title = "Log-Odds (qualityclass is good)", show.p = FALSE)
```

```{r}
plogis(mod.coef.logodds["(Intercept)", "Estimate"] + mod.coef.logodds["acidity", "Estimate"] * data$acidity)
```

```{r}
#method 1
ggplot(data = data, aes(x = acidity, y = probs.good)) +
  geom_smooth(method="glm", 
              method.args = list(family="binomial"), 
              se = FALSE) +
  labs(x = "Acidity", y = "Probability of qualityclass being good")
```

```{r}
#method 2
plot_model(model1, type = "pred", terms = "acidity[all]")
```

The plot shows that higher acidity scores are associated with a higher probability of Qualityclass. There is a positive relationship between acidity and coffee quality, though it seems to have a threshold effect, with probability rising more sharply after a certain point.

4、category_two_defects
```{r}
category_two_defects.logodds.lower <- mod.coef.logodds["category_two_defects", "Estimate"] - 
                      1.96 * mod.coef.logodds["category_two_defects", "Std. Error"]
category_two_defects.logodds.upper <- mod.coef.logodds["category_two_defects", "Estimate"] + 
                      1.96 * mod.coef.logodds["category_two_defects", "Std. Error"]
plot_model(model1, terms = "category_two_defects",show.values = TRUE, transform = NULL,
           title = "Log-Odds (qualityclass is good)", show.p = FALSE)
```

```{r}
plogis(mod.coef.logodds["(Intercept)", "Estimate"] + mod.coef.logodds["category_two_defects", "Estimate"] * data$acidity)
```

```{r}
#method 1
ggplot(data = data, aes(x = category_two_defects, y = probs.good)) +
  geom_smooth(method="glm", 
              method.args = list(family="binomial"), 
              se = FALSE) +
  labs(x = "Category_two_defects", y = "Probability of qualityclass being good")
```

```{r}
#method 2
plot_model(model1, type = "pred", terms = "category_two_defects[all]")
```

As the number of defects increases, the probability of a higher Qualityclass increases. This is somewhat counterintuitive, as one might expect more defects to decrease quality. However, the confidence band is wide, suggesting there may be high variability or that this variable interacts with others in complex ways.

5、continent
```{r}
plot_model(model1, type = "pred", terms = "continent")
```

 There appears to be variation among continents, with some showing higher probabilities than others, suggesting geographical variation in coffee quality.
